# Cluster validation

```{python}
import pandas as pd
import numpy as np
from sklearn.metrics import (
  rand_score, adjusted_rand_score, 
  silhouette_samples, silhouette_score, 
  calinski_harabasz_score
)
```

## Examples 14.1, 14.3

### Data

```{python}
sol1 = np.array([1, 1, 2, 2, 2, 3, 3])
sol2 = np.array([1, 1, 2, 3, 2, 1, 3])
```

### Ex 14.1 Rand index

```{python}
rand_score(sol1, sol2)
```

### Ex 14.3 Adjusted Rand index

```{python}
adjusted_rand_score(sol1, sol2)
```


## Example 14.4

### Data

```{python}
sol1 = np.array([1, 1, 1, 1, 2, 2, 2, 3, 3, 3])
sol2 = np.array([1, 1, 2, 3, 1, 2, 3, 1, 2, 3])
```

### Rand index

```{python}
rand_score(sol1, sol2)
```

### Adjusted Rand index

```{python}
adjusted_rand_score(sol1, sol2)
```


## Example 14.5

### Load data

```{python}
df = pd.read_csv("data/ch14_dat1.csv")
```

### Cluster solutions

```{python}
sol1 = np.array([1, 2, 1, 3, 2, 1, 2, 3])
sol2 = np.array([1, 2, 1, 2, 2, 1, 2, 2])
```

### Calinski-Harabasz index

```{python}
calinski_harabasz_score(df, sol1)
```

```{python}
calinski_harabasz_score(df, sol2)
```

### Average silhouette width

```{python}
silhouette_score(df, sol1)
```

```{python}
silhouette_score(df, sol2)
```

### Silhouette for each sample

```{python}
df.assign(
  silhouetee = silhouette_samples(df, sol1)
)
```

```{python}
df.assign(
  silhouetee = silhouette_samples(df, sol2)
)
```
