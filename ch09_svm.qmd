# Support vector machine

```{python}
import pandas as pd
import numpy as np
from sklearn.svm import SVC
from sklearn.preprocessing import LabelBinarizer
from sklearn.metrics import accuracy_score
```

## Example 9.1

### Load data

```{python}
dat = pd.read_csv("data/ch9_dat1.csv")
X = dat[['x1', 'x2']]
y = LabelBinarizer(neg_label=-1, pos_label=1).fit_transform(dat['class']).ravel()
```

### Linear SVM: Separable

```{python}
svm_model = SVC(kernel='linear', C=100)
svm_model.fit(X, y)
```

Hyperplane intercept:

```{python}
svm_model.intercept_
```

Hyperplane coefficients:

```{python}
svm_model.coef_
```


## Example 9.2

### Load data

```{python}
dat = pd.read_csv("data/ch9_dat2.csv")
X = dat[['x1', 'x2']]
y = LabelBinarizer(neg_label=-1, pos_label=1).fit_transform(dat['class']).ravel()
```

### Linear SVM: Inseparable

```{python}
Cs = (1, 5, 100)
svm_models = [SVC(C=c, kernel='linear') for c in Cs]
svm_models = [m.fit(X, y) for m in svm_models]

for i in range(len(Cs)):
  print(f"C = {Cs[i]}, Intercept = {svm_models[i].intercept_}, Coefficients = {svm_models[i].coef_}")
```


