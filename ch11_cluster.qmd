# Cluster analysis

```{python}
import pandas as pd
import numpy as np
from sklearn.metrics import pairwise
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import jaccard_score
```

## Examples 11.1, 11.3

### Load data

```{python}
dat1 = pd.read_csv("data/ch11_dat1.csv")
X = dat1[['X1', 'X2', 'X3']]
```

### Ex 11.1

#### Euclidean distance

```{python}
D1 = pairwise.euclidean_distances(X)
np.round(D1, 2)
```

Distance between 2nd object and 4th object. Please note that python's position index start from 0, so you should use positions 1 and 3.

```{python}
D1[1, 3]
```


#### Standardized Euclidean distance

Standardize data by using `StandardScaler` from `sklearn.preprocessing` module.

```{python}
std_X = StandardScaler().fit_transform(X)
std_D1 = pairwise.euclidean_distances(std_X)
np.round(std_D1, 2)
```

:::{.callout-note}
`StandardScaler` uses population variance formula instead of sample variance formula, so the results are slightly different from book example.
:::

Standardized distance between 2nd object and 4th object.

```{python}
std_D1[1, 3]
```

### Ex 11.3

#### Correlation coefficients

```{python}
row_cor = np.corrcoef(X)
row_cor.round(2)
```

Correlation coefficients between 1st object and 8th object.

```{python}
row_cor[0, 7]
```

:::{.callout-note}
You can also use cosine similarity after centering by row.

```{python}
centered_X = X.to_numpy() - np.mean(X, axis=1).to_numpy().reshape(-1, 1)
pairwise.cosine_similarity(centered_X).round(2)
```
:::

#### After standardization

```{python}
std_row_cor = np.corrcoef(std_X)
std_row_cor.round(2)
```

Correlation coefficients between 1st object and 8th object after standardization.

```{python}
std_row_cor[0, 7]
```


## Example 11.4

### Load data

```{python}
df = pd.read_csv("data/ch11_dat2.csv")
df
```

### Jaccard index

```{python}
jaccard_sim = np.eye(len(df))
for i in range(len(df) - 1):
  for j in range(i + 1, len(df)):
    jaccard_sim[i, j] = jaccard_score(df.loc[i], df.loc[j])
    jaccard_sim[j, i] = jaccard_sim[i, j]

jaccard_sim
```